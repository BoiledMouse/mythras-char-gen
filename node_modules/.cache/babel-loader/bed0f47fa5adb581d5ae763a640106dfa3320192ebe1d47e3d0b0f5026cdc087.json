{"ast":null,"code":"// src/steps/SkillsStep.jsx\nimport React,{useState,useEffect}from'react';import{useCharacter}from'../context/characterContext';import cultures from'../data/cultures.json';import careers from'../data/careers.json';import skillsData from'../data/skills.json';import StepWrapper from'../components/StepWrapper';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function SkillsStep(_ref){var _cultureDef$standardS2,_cultureDef$professio,_cultureDef$combatSty,_careerDef$standardSk2,_careerDef$profession,_character$selectedSk,_character$selectedSk2,_character$selectedSk3,_character$selectedSk4;let{formData}=_ref;const{character,updateCharacter}=useCharacter();const{STR=0,DEX=0,INT=0,CON=0,POW=0,CHA=0,SIZ=0}=character;const{age=0,culture:cultKey='',career:careerKey=''}=formData;const cultureDef=cultures[cultKey]||{};const careerDef=careers[careerKey]||{};// Universal min/max for sliders\nconst SKILL_MIN=5;const SKILL_MAX=15;const CULT_POOL=100;const CAREER_POOL=100;// Age buckets for bonus and maxInc\nconst ageBuckets=[{max:16,bonus:100,maxInc:10},{max:27,bonus:150,maxInc:15},{max:43,bonus:200,maxInc:20},{max:64,bonus:250,maxInc:25},{max:Infinity,bonus:300,maxInc:30}];const{bonus:initialBonusPool=0,maxInc=0}=ageBuckets.find(b=>age<=b.max)||{};// Attribute formulas parser\nconst attrs={STR,DEX,INT,CON,POW,CHA,SIZ};const computeBase=expr=>{const parts=expr.split(/\\s*([+x])\\s*/).filter(Boolean);let val=parseInt(attrs[parts[0]]||0,10);for(let i=1;i<parts.length;i+=2){const op=parts[i];const tok=parts[i+1];const v=/^\\d+$/.test(tok)?+tok:attrs[tok]||0;val=op==='x'?val*v:val+v;}return val;};// Base standards\nconst rawStandard=skillsData.standard.map(s=>s.name);const baseStandard={};skillsData.standard.forEach(_ref2=>{let{name,base}=_ref2;let b=computeBase(base);if(name==='Customs'||name==='Native Tongue')b+=40;baseStandard[name]=b;});new Set([...rawStandard,...(cultureDef.standardSkills||[]),...(careerDef.standardSkills||[])]).forEach(name=>{const root=name.includes('(')?name.split('(')[0].trim():name;baseStandard[name]=baseStandard[root]||0;});// Base professional\nconst baseProfGeneric={};skillsData.professional.forEach(_ref3=>{let{name,base}=_ref3;baseProfGeneric[name]=computeBase(base);});const profSet=new Set([...skillsData.professional.map(s=>s.name),...(cultureDef.professionalSkills||[]),...(careerDef.professionalSkills||[])]);const baseProfessional={};Array.from(profSet).forEach(name=>{const root=name.includes('(')?name.split('(')[0].trim():name;let val=baseProfGeneric[root]||0;if(root==='Language'&&!name.includes('('))val+=40;baseProfessional[name]=val;});(cultureDef.combatStyles||[]).forEach(style=>{baseProfessional[style]=STR+DEX;});// State\nconst[phase,setPhase]=useState(1);const[cStdAlloc,setCStdAlloc]=useState({});const[cProfSel,setCProfSel]=useState([]);const[cProfAlloc,setCProfAlloc]=useState({});const[cCombSel,setCCombSel]=useState('');const[cCombAlloc,setCCombAlloc]=useState(SKILL_MIN);const[rStdAlloc,setRStdAlloc]=useState({});const[rProfSel,setRProfSel]=useState([]);const[rProfAlloc,setRProfAlloc]=useState({});const[bonusAlloc,setBonusAlloc]=useState({});const[hobby,setHobby]=useState('');const sum=obj=>Object.values(obj).reduce((a,v)=>a+(v||0),0);const bonusLeft=initialBonusPool-sum(bonusAlloc);// Total cultural and career allocations\nconst totalCulturalAlloc=(cultureDef.standardSkills||[]).reduce((acc,s)=>{var _cStdAlloc$s;return acc+((_cStdAlloc$s=cStdAlloc[s])!==null&&_cStdAlloc$s!==void 0?_cStdAlloc$s:SKILL_MIN);},0)+cProfSel.reduce((acc,s)=>{var _cProfAlloc$s;return acc+((_cProfAlloc$s=cProfAlloc[s])!==null&&_cProfAlloc$s!==void 0?_cProfAlloc$s:SKILL_MIN);},0)+(cCombSel?cCombAlloc:0);const totalCareerAlloc=(careerDef.standardSkills||[]).reduce((acc,s)=>{var _rStdAlloc$s;return acc+((_rStdAlloc$s=rStdAlloc[s])!==null&&_rStdAlloc$s!==void 0?_rStdAlloc$s:SKILL_MIN);},0)+rProfSel.reduce((acc,s)=>{var _rProfAlloc$s;return acc+((_rProfAlloc$s=rProfAlloc[s])!==null&&_rProfAlloc$s!==void 0?_rProfAlloc$s:SKILL_MIN);},0);// Bonus skills list\nconst bonusSkills=new Set([...(cultureDef.standardSkills||[]),...(cultureDef.professionalSkills||[]),...(cultureDef.combatStyles&&cCombSel?[cCombSel]:[]),...(careerDef.standardSkills||[]),...(careerDef.professionalSkills||[]),...(hobby?[hobby]:[])]);// Generic slider handler\nconst handleRange=(alloc,setAlloc,skill,limit,pool)=>e=>{var _alloc$skill;let v=parseInt(e.target.value,10)||SKILL_MIN;v=Math.max(SKILL_MIN,Math.min(limit,v));const prev=(_alloc$skill=alloc[skill])!==null&&_alloc$skill!==void 0?_alloc$skill:SKILL_MIN;if(v-prev<=pool)setAlloc({...alloc,[skill]:v});};// Update character on summary\nuseEffect(()=>{if(phase===4){var _cultureDef$standardS,_careerDef$standardSk;const final={...baseStandard,...baseProfessional};(_cultureDef$standardS=cultureDef.standardSkills)===null||_cultureDef$standardS===void 0?void 0:_cultureDef$standardS.forEach(s=>{var _cStdAlloc$s2;return final[s]+=(_cStdAlloc$s2=cStdAlloc[s])!==null&&_cStdAlloc$s2!==void 0?_cStdAlloc$s2:SKILL_MIN;});cProfSel.forEach(s=>{var _cProfAlloc$s2;return final[s]+=(_cProfAlloc$s2=cProfAlloc[s])!==null&&_cProfAlloc$s2!==void 0?_cProfAlloc$s2:SKILL_MIN;});if(cCombSel)final[cCombSel]+=cCombAlloc;(_careerDef$standardSk=careerDef.standardSkills)===null||_careerDef$standardSk===void 0?void 0:_careerDef$standardSk.forEach(s=>{var _rStdAlloc$s2;return final[s]+=(_rStdAlloc$s2=rStdAlloc[s])!==null&&_rStdAlloc$s2!==void 0?_rStdAlloc$s2:SKILL_MIN;});rProfSel.forEach(s=>{var _rProfAlloc$s2;return final[s]+=(_rProfAlloc$s2=rProfAlloc[s])!==null&&_rProfAlloc$s2!==void 0?_rProfAlloc$s2:SKILL_MIN;});Object.entries(bonusAlloc).forEach(_ref4=>{let[s,v]=_ref4;return final[s]+=v;});updateCharacter({skills:final,selectedSkills:{standard:[...(cultureDef.standardSkills||[]),...(careerDef.standardSkills||[])],professional:[...cProfSel,...rProfSel,...(cCombSel?[cCombSel]:[])],combat:cCombSel?[cCombSel]:[]}});}},[phase]);return/*#__PURE__*/_jsxs(_Fragment,{children:[phase===1&&/*#__PURE__*/_jsxs(StepWrapper,{title:\"Cultural Skills\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Points left: \",CULT_POOL-totalCulturalAlloc]}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-heading text-lg mb-2\",children:\"Standard Skills\"}),(_cultureDef$standardS2=cultureDef.standardSkills)===null||_cultureDef$standardS2===void 0?void 0:_cultureDef$standardS2.map(s=>{var _cStdAlloc$s3;const base=baseStandard[s];const alloc=(_cStdAlloc$s3=cStdAlloc[s])!==null&&_cStdAlloc$s3!==void 0?_cStdAlloc$s3:SKILL_MIN;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:s}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[base,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:SKILL_MIN,max:SKILL_MAX,value:alloc,onChange:handleRange(cStdAlloc,setCStdAlloc,s,SKILL_MAX,CULT_POOL-totalCulturalAlloc+alloc)}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",alloc,\"% = \",base+alloc,\"%\"]})]},s);}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-heading text-lg mt-4 mb-2\",children:\"Professional (max 3)\"}),(_cultureDef$professio=cultureDef.professionalSkills)===null||_cultureDef$professio===void 0?void 0:_cultureDef$professio.map(s=>/*#__PURE__*/_jsxs(\"label\",{className:\"inline-flex items-center mr-4 mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"mr-1\",checked:cProfSel.includes(s),onChange:()=>setCProfSel(sel=>sel.includes(s)?sel.filter(x=>x!==s):sel.length<3?[...sel,s]:sel)}),s]},s)),cProfSel.map(s=>{var _cProfAlloc$s3;const base=baseProfessional[s];const alloc=(_cProfAlloc$s3=cProfAlloc[s])!==null&&_cProfAlloc$s3!==void 0?_cProfAlloc$s3:SKILL_MIN;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:s}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[base,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:SKILL_MIN,max:SKILL_MAX,value:alloc,onChange:handleRange(cProfAlloc,setCProfAlloc,s,SKILL_MAX,CULT_POOL-totalCulturalAlloc+alloc)}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",alloc,\"% = \",base+alloc,\"%\"]})]},s);}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-heading text-lg mt-4 mb-2\",children:\"Combat Style\"}),(_cultureDef$combatSty=cultureDef.combatStyles)===null||_cultureDef$combatSty===void 0?void 0:_cultureDef$combatSty.map(cs=>/*#__PURE__*/_jsxs(\"label\",{className:\"inline-flex items-center mr-4 mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"combat\",className:\"mr-1\",checked:cCombSel===cs,onChange:()=>{setCCombSel(cs);setCCombAlloc(SKILL_MIN);}}),cs]},cs)),cCombSel&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:cCombSel}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[baseProfessional[cCombSel],\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:SKILL_MIN,max:SKILL_MAX,value:cCombAlloc,onChange:e=>{const v=Math.min(SKILL_MAX,Math.max(SKILL_MIN,+e.target.value));if(v-cCombAlloc<=CULT_POOL-totalCulturalAlloc+cCombAlloc){setCCombAlloc(v);}}}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",cCombAlloc,\"% = \",baseProfessional[cCombSel]+cCombAlloc,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mt-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>setPhase(2),children:\"Next: Career\"})})]}),phase===2&&/*#__PURE__*/_jsxs(StepWrapper,{title:\"Career Skills\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Points left: \",CAREER_POOL-totalCareerAlloc]}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-heading text-lg mb-2\",children:\"Standard Skills\"}),(_careerDef$standardSk2=careerDef.standardSkills)===null||_careerDef$standardSk2===void 0?void 0:_careerDef$standardSk2.map(s=>{var _cStdAlloc$s4,_rStdAlloc$s3;const base=(baseStandard[s]||0)+((_cStdAlloc$s4=cStdAlloc[s])!==null&&_cStdAlloc$s4!==void 0?_cStdAlloc$s4:SKILL_MIN);const alloc=(_rStdAlloc$s3=rStdAlloc[s])!==null&&_rStdAlloc$s3!==void 0?_rStdAlloc$s3:SKILL_MIN;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:s}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[base,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:SKILL_MIN,max:SKILL_MAX,value:alloc,onChange:handleRange(rStdAlloc,setRStdAlloc,s,SKILL_MAX,CAREER_POOL-totalCareerAlloc+alloc)}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",alloc,\"% = \",base+alloc,\"%\"]})]},s);}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-heading text-lg mt-4 mb-2\",children:\"Professional (max 3)\"}),(_careerDef$profession=careerDef.professionalSkills)===null||_careerDef$profession===void 0?void 0:_careerDef$profession.map(s=>/*#__PURE__*/_jsxs(\"label\",{className:\"inline-flex items-center mr-4 mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"mr-1\",checked:rProfSel.includes(s),onChange:()=>setRProfSel(sel=>sel.includes(s)?sel.filter(x=>x!==s):sel.length<3?[...sel,s]:sel)}),s]},s)),rProfSel.map(s=>{var _cProfAlloc$s4,_rProfAlloc$s3;const base=(baseProfessional[s]||0)+((_cProfAlloc$s4=cProfAlloc[s])!==null&&_cProfAlloc$s4!==void 0?_cProfAlloc$s4:SKILL_MIN);const alloc=(_rProfAlloc$s3=rProfAlloc[s])!==null&&_rProfAlloc$s3!==void 0?_rProfAlloc$s3:SKILL_MIN;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:s}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[base,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:SKILL_MIN,max:SKILL_MAX,value:alloc,onChange:handleRange(rProfAlloc,setRProfAlloc,s,SKILL_MAX,CAREER_POOL-totalCareerAlloc+alloc)}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",alloc,\"% = \",base+alloc,\"%\"]})]},s);}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\\tmt-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setPhase(1),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>setPhase(3),children:\"Next: Bonus\"})]})]}),phase===3&&/*#__PURE__*/_jsxs(StepWrapper,{title:\"Bonus Skills\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Bonus left: \",bonusLeft]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"font-medium\",children:\"Select hobby skill:\"}),/*#__PURE__*/_jsxs(\"select\",{value:hobby,onChange:e=>setHobby(e.target.value),className:\"ml-2 border rounded p-1\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"None\"}),[...Object.keys(baseStandard),...Object.keys(baseProfessional)].map(sk=>/*#__PURE__*/_jsx(\"option\",{value:sk,children:sk},sk))]})]}),[...bonusSkills].map(s=>{var _cStdAlloc$s5,_cProfAlloc$s5,_rStdAlloc$s4,_rProfAlloc$s4;const alloc=bonusAlloc[s]||0;const pool=initialBonusPool-sum(bonusAlloc)+alloc;const base=(baseStandard[s]||0)+((_cStdAlloc$s5=cStdAlloc[s])!==null&&_cStdAlloc$s5!==void 0?_cStdAlloc$s5:SKILL_MIN)+(baseProfessional[s]||0)+((_cProfAlloc$s5=cProfAlloc[s])!==null&&_cProfAlloc$s5!==void 0?_cProfAlloc$s5:SKILL_MIN)+(s===cCombSel?cCombAlloc:0)+((_rStdAlloc$s4=rStdAlloc[s])!==null&&_rStdAlloc$s4!==void 0?_rStdAlloc$s4:SKILL_MIN)+((_rProfAlloc$s4=rProfAlloc[s])!==null&&_rProfAlloc$s4!==void 0?_rProfAlloc$s4:SKILL_MIN);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-24 font-medium\",children:s}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-16\",children:[base,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"flex-1 mx-2\",min:0,max:maxInc,value:alloc,onChange:handleRange(bonusAlloc,setBonusAlloc,s,maxInc,pool)}),/*#__PURE__*/_jsxs(\"span\",{className:\"w-24 text-right\",children:[\"+\",alloc,\"% = \",base+alloc,\"%\"]})]},s);}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\\tmt-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setPhase(2),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>setPhase(4),children:\"Finish\"})]})]}),phase===4&&/*#__PURE__*/_jsxs(StepWrapper,{title:\"Skills Summary\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Standard Skills\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside mb-4\",children:skillsData.standard.map(_ref5=>{let{name}=_ref5;return name;}).filter(n=>!['Brawn','Endurance','Evade','Willpower'].includes(n)).map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n,\": \",character.skills[n],\"%\"]},n))}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Resistances\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside mb-4\",children:['Brawn','Endurance','Evade','Willpower'].filter(n=>character.skills[n]!=null).map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n,\": \",character.skills[n],\"%\"]},n))}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Combat Skills\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside mb-4\",children:(_character$selectedSk=character.selectedSkills)===null||_character$selectedSk===void 0?void 0:(_character$selectedSk2=_character$selectedSk.combat)===null||_character$selectedSk2===void 0?void 0:_character$selectedSk2.map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n,\": \",character.skills[n],\"%\"]},n))}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Professional Skills\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside mb-4\",children:(_character$selectedSk3=character.selectedSkills)===null||_character$selectedSk3===void 0?void 0:(_character$selectedSk4=_character$selectedSk3.professional)===null||_character$selectedSk4===void 0?void 0:_character$selectedSk4.map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n,\": \",character.skills[n],\"%\"]},n))}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Magic Skills\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside\",children:[...skillsData.folkMagic.map(s=>s.name),...skillsData.animism.map(s=>s.name),...skillsData.mysticism.map(s=>s.name),...skillsData.sorcery.map(s=>s.name),...skillsData.theism.map(s=>s.name)].filter(n=>character.skills[n]!=null).map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n,\": \",character.skills[n],\"%\"]},n))})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCharacter","cultures","careers","skillsData","StepWrapper","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","SkillsStep","_ref","_cultureDef$standardS2","_cultureDef$professio","_cultureDef$combatSty","_careerDef$standardSk2","_careerDef$profession","_character$selectedSk","_character$selectedSk2","_character$selectedSk3","_character$selectedSk4","formData","character","updateCharacter","STR","DEX","INT","CON","POW","CHA","SIZ","age","culture","cultKey","career","careerKey","cultureDef","careerDef","SKILL_MIN","SKILL_MAX","CULT_POOL","CAREER_POOL","ageBuckets","max","bonus","maxInc","Infinity","initialBonusPool","find","b","attrs","computeBase","expr","parts","split","filter","Boolean","val","parseInt","i","length","op","tok","v","test","rawStandard","standard","map","s","name","baseStandard","forEach","_ref2","base","Set","standardSkills","root","includes","trim","baseProfGeneric","professional","_ref3","profSet","professionalSkills","baseProfessional","Array","from","combatStyles","style","phase","setPhase","cStdAlloc","setCStdAlloc","cProfSel","setCProfSel","cProfAlloc","setCProfAlloc","cCombSel","setCCombSel","cCombAlloc","setCCombAlloc","rStdAlloc","setRStdAlloc","rProfSel","setRProfSel","rProfAlloc","setRProfAlloc","bonusAlloc","setBonusAlloc","hobby","setHobby","sum","obj","Object","values","reduce","a","bonusLeft","totalCulturalAlloc","acc","_cStdAlloc$s","_cProfAlloc$s","totalCareerAlloc","_rStdAlloc$s","_rProfAlloc$s","bonusSkills","handleRange","alloc","setAlloc","skill","limit","pool","e","_alloc$skill","target","value","Math","min","prev","_cultureDef$standardS","_careerDef$standardSk","final","_cStdAlloc$s2","_cProfAlloc$s2","_rStdAlloc$s2","_rProfAlloc$s2","entries","_ref4","skills","selectedSkills","combat","children","title","className","_cStdAlloc$s3","type","onChange","checked","sel","x","_cProfAlloc$s3","cs","onClick","_cStdAlloc$s4","_rStdAlloc$s3","_cProfAlloc$s4","_rProfAlloc$s3","keys","sk","_cStdAlloc$s5","_cProfAlloc$s5","_rStdAlloc$s4","_rProfAlloc$s4","_ref5","n","folkMagic","animism","mysticism","sorcery","theism"],"sources":["/workspaces/mythras-char-gen/src/steps/SkillsStep.jsx"],"sourcesContent":["// src/steps/SkillsStep.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useCharacter } from '../context/characterContext';\nimport cultures from '../data/cultures.json';\nimport careers from '../data/careers.json';\nimport skillsData from '../data/skills.json';\nimport StepWrapper from '../components/StepWrapper';\n\nexport default function SkillsStep({ formData }) {\n  const { character, updateCharacter } = useCharacter();\n  const { STR = 0, DEX = 0, INT = 0, CON = 0, POW = 0, CHA = 0, SIZ = 0 } = character;\n  const { age = 0, culture: cultKey = '', career: careerKey = '' } = formData;\n  const cultureDef = cultures[cultKey] || {};\n  const careerDef = careers[careerKey] || {};\n\n  // Universal min/max for sliders\n  const SKILL_MIN = 5;\n  const SKILL_MAX = 15;\n  const CULT_POOL = 100;\n  const CAREER_POOL = 100;\n\n  // Age buckets for bonus and maxInc\n  const ageBuckets = [\n    { max: 16, bonus: 100, maxInc: 10 },\n    { max: 27, bonus: 150, maxInc: 15 },\n    { max: 43, bonus: 200, maxInc: 20 },\n    { max: 64, bonus: 250, maxInc: 25 },\n    { max: Infinity, bonus: 300, maxInc: 30 },\n  ];\n  const { bonus: initialBonusPool = 0, maxInc = 0 } = ageBuckets.find(b => age <= b.max) || {};\n\n  // Attribute formulas parser\n  const attrs = { STR, DEX, INT, CON, POW, CHA, SIZ };\n  const computeBase = expr => {\n    const parts = expr.split(/\\s*([+x])\\s*/).filter(Boolean);\n    let val = parseInt(attrs[parts[0]] || 0, 10);\n    for (let i = 1; i < parts.length; i += 2) {\n      const op = parts[i];\n      const tok = parts[i+1];\n      const v = /^\\d+$/.test(tok) ? +tok : attrs[tok] || 0;\n      val = op === 'x' ? val * v : val + v;\n    }\n    return val;\n  };\n\n  // Base standards\n  const rawStandard = skillsData.standard.map(s => s.name);\n  const baseStandard = {};\n  skillsData.standard.forEach(({ name, base }) => {\n    let b = computeBase(base);\n    if (name === 'Customs' || name === 'Native Tongue') b += 40;\n    baseStandard[name] = b;\n  });\n  new Set([\n    ...rawStandard,\n    ...(cultureDef.standardSkills || []),\n    ...(careerDef.standardSkills || [])\n  ]).forEach(name => {\n    const root = name.includes('(') ? name.split('(')[0].trim() : name;\n    baseStandard[name] = baseStandard[root] || 0;\n  });\n\n  // Base professional\n  const baseProfGeneric = {};\n  skillsData.professional.forEach(({ name, base }) => {\n    baseProfGeneric[name] = computeBase(base);\n  });\n  const profSet = new Set([\n    ...skillsData.professional.map(s => s.name),\n    ...(cultureDef.professionalSkills || []),\n    ...(careerDef.professionalSkills || [])\n  ]);\n  const baseProfessional = {};\n  Array.from(profSet).forEach(name => {\n    const root = name.includes('(') ? name.split('(')[0].trim() : name;\n    let val = baseProfGeneric[root] || 0;\n    if (root === 'Language' && !name.includes('(')) val += 40;\n    baseProfessional[name] = val;\n  });\n  (cultureDef.combatStyles || []).forEach(style => {\n    baseProfessional[style] = STR + DEX;\n  });\n\n  // State\n  const [phase, setPhase] = useState(1);\n  const [cStdAlloc, setCStdAlloc] = useState({});\n  const [cProfSel, setCProfSel] = useState([]);\n  const [cProfAlloc, setCProfAlloc] = useState({});\n  const [cCombSel, setCCombSel] = useState('');\n  const [cCombAlloc, setCCombAlloc] = useState(SKILL_MIN);\n  const [rStdAlloc, setRStdAlloc] = useState({});\n  const [rProfSel, setRProfSel] = useState([]);\n  const [rProfAlloc, setRProfAlloc] = useState({});\n  const [bonusAlloc, setBonusAlloc] = useState({});\n  const [hobby, setHobby] = useState('');\n\n  const sum = obj => Object.values(obj).reduce((a, v) => a + (v || 0), 0);\n  const bonusLeft = initialBonusPool - sum(bonusAlloc);\n\n  // Total cultural and career allocations\n  const totalCulturalAlloc =\n    (cultureDef.standardSkills || []).reduce(\n      (acc, s) => acc + (cStdAlloc[s] ?? SKILL_MIN), 0\n    ) +\n    cProfSel.reduce(\n      (acc, s) => acc + (cProfAlloc[s] ?? SKILL_MIN), 0\n    ) +\n    (cCombSel ? cCombAlloc : 0);\n\n  const totalCareerAlloc =\n    (careerDef.standardSkills || []).reduce(\n      (acc, s) => acc + (rStdAlloc[s] ?? SKILL_MIN), 0\n    ) +\n    rProfSel.reduce(\n      (acc, s) => acc + (rProfAlloc[s] ?? SKILL_MIN), 0\n    );\n\n  // Bonus skills list\n  const bonusSkills = new Set([\n    ...(cultureDef.standardSkills || []),\n    ...(cultureDef.professionalSkills || []),\n    ...(cultureDef.combatStyles && cCombSel ? [cCombSel] : []),\n    ...(careerDef.standardSkills || []),\n    ...(careerDef.professionalSkills || []),\n    ...(hobby ? [hobby] : [])\n  ]);\n\n  // Generic slider handler\n  const handleRange = (alloc, setAlloc, skill, limit, pool) => e => {\n    let v = parseInt(e.target.value, 10) || SKILL_MIN;\n    v = Math.max(SKILL_MIN, Math.min(limit, v));\n    const prev = alloc[skill] ?? SKILL_MIN;\n    if (v - prev <= pool) setAlloc({ ...alloc, [skill]: v });\n  };\n\n  // Update character on summary\n  useEffect(() => {\n    if (phase === 4) {\n      const final = { ...baseStandard, ...baseProfessional };\n      cultureDef.standardSkills?.forEach(s => (final[s] += cStdAlloc[s] ?? SKILL_MIN));\n      cProfSel.forEach(s => (final[s] += cProfAlloc[s] ?? SKILL_MIN));\n      if (cCombSel) final[cCombSel] += cCombAlloc;\n      careerDef.standardSkills?.forEach(s => (final[s] += rStdAlloc[s] ?? SKILL_MIN));\n      rProfSel.forEach(s => (final[s] += rProfAlloc[s] ?? SKILL_MIN));\n      Object.entries(bonusAlloc).forEach(([s, v]) => (final[s] += v));\n      updateCharacter({\n        skills: final,\n        selectedSkills: {\n          standard: [\n            ...(cultureDef.standardSkills || []),\n            ...(careerDef.standardSkills || [])\n          ],\n          professional: [...cProfSel, ...rProfSel, ...(cCombSel ? [cCombSel] : [])],\n          combat: cCombSel ? [cCombSel] : []\n        }\n      });\n    }\n  }, [phase]);\n\n  return (\n    <>\n      {/* Phase 1: Cultural Skills */}\n      {phase === 1 && (\n        <StepWrapper title=\"Cultural Skills\">\n          <p>Points left: {CULT_POOL - totalCulturalAlloc}</p>\n          <h3 className=\"font-heading text-lg mb-2\">Standard Skills</h3>\n          {cultureDef.standardSkills?.map(s => {\n            const base = baseStandard[s];\n            const alloc = cStdAlloc[s] ?? SKILL_MIN;\n            return (\n              <div key={s} className=\"flex items-center mb-2\">\n                <span className=\"w-24 font-medium\">{s}</span>\n                <span className=\"w-16\">{base}%</span>\n                <input\n                  type=\"range\"\n                  className=\"flex-1 mx-2\"\n                  min={SKILL_MIN}\n                  max={SKILL_MAX}\n                  value={alloc}\n                  onChange={handleRange(\n                    cStdAlloc,\n                    setCStdAlloc,\n                    s,\n                    SKILL_MAX,\n                    CULT_POOL - totalCulturalAlloc + alloc\n                  )}\n                />\n                <span className=\"w-24 text-right\">+{alloc}% = {base + alloc}%</span>\n              </div>\n            );\n          })}\n          <h3 className=\"font-heading text-lg mt-4 mb-2\">Professional (max 3)</h3>\n          {cultureDef.professionalSkills?.map(s => (\n            <label key={s} className=\"inline-flex items-center mr-4 mb-2\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={cProfSel.includes(s)}\n                onChange={() =>\n                  setCProfSel(sel =>\n                    sel.includes(s)\n                      ? sel.filter(x => x !== s)\n                      : sel.length < 3\n                      ? [...sel, s]\n                      : sel\n                  )\n                }\n              />\n              {s}\n            </label>\n          ))}\n          {cProfSel.map(s => {\n            const base = baseProfessional[s];\n            const alloc = cProfAlloc[s] ?? SKILL_MIN;\n            return (\n              <div key={s} className=\"flex items-center mb-2\">\n                <span className=\"w-24 font-medium\">{s}</span>\n                <span className=\"w-16\">{base}%</span>\n                <input\n                  type=\"range\"\n                  className=\"flex-1 mx-2\"\n                  min={SKILL_MIN}\n                  max={SKILL_MAX}\n                  value={alloc}\n                  onChange={handleRange(\n                    cProfAlloc,\n                    setCProfAlloc,\n                    s,\n                    SKILL_MAX,\n                    CULT_POOL - totalCulturalAlloc + alloc\n                  )}\n                />\n                <span className=\"w-24 text-right\">+{alloc}% = {base + alloc}%</span>\n              </div>\n            );\n          })}\n          <h3 className=\"font-heading text-lg mt-4 mb-2\">Combat Style</h3>\n          {cultureDef.combatStyles?.map(cs => (\n            <label key={cs} className=\"inline-flex items-center mr-4 mb-2\">\n              <input\n                type=\"radio\"\n                name=\"combat\"\n                className=\"mr-1\"\n                checked={cCombSel === cs}\n                onChange={() => {\n                  setCCombSel(cs);\n                  setCCombAlloc(SKILL_MIN);\n                }}\n              />\n              {cs}\n            </label>\n          ))}\n          {cCombSel && (\n            <div className=\"flex items-center mb-2\">\n              <span className=\"w-24 font-medium\">{cCombSel}</span>\n              <span className=\"w-16\">{baseProfessional[cCombSel]}%</span>\n              <input\n                type=\"range\"\n                className=\"flex-1 mx-2\"\n                min={SKILL_MIN}\n                max={SKILL_MAX}\n                value={cCombAlloc}\n                onChange={e => {\n                  const v = Math.min(SKILL_MAX, Math.max(SKILL_MIN, +e.target.value));\n                  if (v - cCombAlloc <= CULT_POOL - totalCulturalAlloc + cCombAlloc) {\n                    setCCombAlloc(v);\n                  }\n                }}\n              />\n              <span className=\"w-24 text-right\">+{cCombAlloc}% = {baseProfessional[cCombSel] + cCombAlloc}%</span>\n            </div>\n          )}\n          <div className=\"flex justify-end mt-4\">\n            <button className=\"btn btn-primary\" onClick={() => setPhase(2)}>Next: Career</button>\n          </div>\n        </StepWrapper>\n      )}\n\n      {/* Phase 2: Career Skills */}\n      {phase === 2 && (\n        <StepWrapper title=\"Career Skills\">\n          <p>Points left: {CAREER_POOL - totalCareerAlloc}</p>\n          <h3 className=\"font-heading text-lg mb-2\">Standard Skills</h3>\n          {careerDef.standardSkills?.map(s => {\n            const base = (baseStandard[s] || 0) + (cStdAlloc[s] ?? SKILL_MIN);\n            const alloc = rStdAlloc[s] ?? SKILL_MIN;\n            return (\n              <div key={s} className=\"flex items-center mb-2\">\n                <span className=\"w-24 font-medium\">{s}</span>\n                <span className=\"w-16\">{base}%</span>\n                <input\n                  type=\"range\"\n                  className=\"flex-1 mx-2\"\n                  min={SKILL_MIN}\n                  max={SKILL_MAX}\n                  value={alloc}\n                  onChange={handleRange(\n                    rStdAlloc,\n                    setRStdAlloc,\n                    s,\n                    SKILL_MAX,\n                    CAREER_POOL - totalCareerAlloc + alloc\n                  )}\n                />\n                <span className=\"w-24 text-right\">+{alloc}% = {base + alloc}%</span>\n              </div>\n            );\n          })}\n          <h3 className=\"font-heading text-lg mt-4 mb-2\">Professional (max 3)</h3>\n          {careerDef.professionalSkills?.map(s => (\n            <label key={s} className=\"inline-flex items-center mr-4 mb-2\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={rProfSel.includes(s)}\n                onChange={() =>\n                  setRProfSel(sel =>\n                    sel.includes(s)\n                      ? sel.filter(x => x !== s)\n                      : sel.length < 3\n                      ? [...sel, s]\n                      : sel\n                  )\n                }\n              />\n              {s}\n            </label>\n          ))}\n          {rProfSel.map(s => {\n            const base = (baseProfessional[s] || 0) + (cProfAlloc[s] ?? SKILL_MIN);\n            const alloc = rProfAlloc[s] ?? SKILL_MIN;\n            return (\n              <div key={s} className=\"flex items-center mb-2\">\n                <span className=\"w-24 font-medium\">{s}</span>\n                <span className=\"w-16\">{base}%</span>\n                <input\n                  type=\"range\"\n                  className=\"flex-1 mx-2\"\n                  min={SKILL_MIN}\n                  max={SKILL_MAX}\n                  value={alloc}\n                  onChange={handleRange(\n                    rProfAlloc,\n                    setRProfAlloc,\n                    s,\n                    SKILL_MAX,\n                    CAREER_POOL - totalCareerAlloc + alloc\n                  )}\n                />\n                <span className=\"w-24 text-right\">+{alloc}% = {base + alloc}%</span>\n              </div>\n            );\n          })}\n          <div className=\"flex justify-between\tmt-4\">\n            <button className=\"btn btn-secondary\" onClick={() => setPhase(1)}>Back</button>\n            <button className=\"btn btn-primary\" onClick={() => setPhase(3)}>Next: Bonus</button>\n          </div>\n        </StepWrapper>\n      )}\n\n      {/* Phase 3: Bonus Skills */}\n      {phase === 3 && (\n        <StepWrapper title=\"Bonus Skills\">\n          <p>Bonus left: {bonusLeft}</p>\n          <div className=\"mb-4\">\n            <label className=\"font-medium\">Select hobby skill:</label>\n            <select\n              value={hobby}\n              onChange={e => setHobby(e.target.value)}\n              className=\"ml-2 border rounded p-1\"\n            >\n              <option value=\"\">None</option>\n              {[...Object.keys(baseStandard), ...Object.keys(baseProfessional)].map(sk => (\n                <option key={sk} value={sk}>{sk}</option>\n              ))}\n            </select>\n          </div>\n          {[...bonusSkills].map(s => {\n            const alloc = bonusAlloc[s] || 0;\n            const pool = initialBonusPool - sum(bonusAlloc) + alloc;\n            const base =\n              (baseStandard[s] || 0) +\n              (cStdAlloc[s] ?? SKILL_MIN) +\n              (baseProfessional[s] || 0) +\n              (cProfAlloc[s] ?? SKILL_MIN) +\n              (s === cCombSel ? cCombAlloc : 0) +\n              (rStdAlloc[s] ?? SKILL_MIN) +\n              (rProfAlloc[s] ?? SKILL_MIN);\n            return (\n              <div key={s} className=\"flex items-center mb-2\">\n                <span className=\"w-24 font-medium\">{s}</span>\n                <span className=\"w-16\">{base}%</span>\n                <input\n                  type=\"range\"\n                  className=\"flex-1 mx-2\"\n                  min={0}\n                  max={maxInc}\n                  value={alloc}\n                  onChange={handleRange(bonusAlloc, setBonusAlloc, s, maxInc, pool)}\n                />\n                <span className=\"w-24 text-right\">+{alloc}% = {base + alloc}%</span>\n              </div>\n            );\n          })}\n          <div className=\"flex justify-between\tmt-4\">\n            <button className=\"btn btn-secondary\" onClick={() => setPhase(2)}>Back</button>\n            <button className=\"btn btn-primary\" onClick={() => setPhase(4)}>Finish</button>\n          </div>\n        </StepWrapper>\n      )}\n\n      {/* Phase 4: Skills Summary */}\n      {phase === 4 && (\n        <StepWrapper title=\"Skills Summary\">\n          <h3 className=\"font-semibold mb-2\">Standard Skills</h3>\n          <ul className=\"list-disc list-inside mb-4\">\n            {skillsData.standard.map(({ name }) => name).filter(n => !['Brawn','Endurance','Evade','Willpower'].includes(n)).map(n => (\n              <li key={n}>{n}: {character.skills[n]}%</li>\n            ))}\n          </ul>\n          <h3 className=\"font-semibold mb-2\">Resistances</h3>\n          <ul className=\"list-disc list-inside mb-4\">\n            {['Brawn','Endurance','Evade','Willpower']\n              .filter(n => character.skills[n] != null)\n              .map(n => <li key={n}>{n}: {character.skills[n]}%</li>)}\n          </ul>\n          <h3 className=\"font-semibold mb-2\">Combat Skills</h3>\n          <ul className=\"list-disc list-inside mb-4\">\n            {character.selectedSkills?.combat?.map(n => <li key={n}>{n}: {character.skills[n]}%</li>)}\n          </ul>\n          <h3 className=\"font-semibold mb-2\">Professional Skills</h3>\n          <ul className=\"list-disc list-inside mb-4\">\n            {character.selectedSkills?.professional?.map(n => <li key={n}>{n}: {character.skills[n]}%</li>)}\n          </ul>\n          <h3 className=\"font-semibold mb-2\">Magic Skills</h3>\n          <ul className=\"list-disc list-inside\">\n            {[\n              ...skillsData.folkMagic.map(s => s.name),\n              ...skillsData.animism.map(s => s.name),\n              ...skillsData.mysticism.map(s => s.name),\n              ...skillsData.sorcery.map(s => s.name),\n              ...skillsData.theism.map(s => s.name)\n            ]\n              .filter(n => character.skills[n] != null)\n              .map(n => <li key={n}>{n}: {character.skills[n]}%</li>)}\n          </ul>\n        </StepWrapper>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}