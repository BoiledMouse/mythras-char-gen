{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useCharacter}from'../context/characterContext';import cultures from'../data/cultures.json';import careers from'../data/careers.json';import skillsData from'../data/skills.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function SkillsStep(){const{character,updateCharacter}=useCharacter();const attrs=character;const cultureDef=cultures[character.culture]||{};const careerDef=careers[character.career]||{};// safe arrays\nconst cultureStandardSkills=cultureDef.standardSkills||[];const cultureProfSkills=cultureDef.professionalSkills||[];const availableCombatStyles=cultureDef.combatStyles||[];const careerStandardSkills=careerDef.standardSkills||[];const careerProfSkills=careerDef.professionalSkills||[];// Compute base skill from attributes, handling numeric multipliers\nconst computeBase=expr=>{const parts=expr.split(/\\s*([+x])\\s*/).filter(Boolean);let val=parseInt(attrs[parts[0]]||0,10);for(let i=1;i<parts.length;i+=2){const op=parts[i];const token=parts[i+1];const v=/^\\d+$/.test(token)?parseInt(token,10):parseInt(attrs[token]||0,10);val=op==='x'?val*v:val+v;}return val;};// base skill tables\nconst baseStandard={};skillsData.standard.forEach(_ref=>{let{name,base}=_ref;let b=computeBase(base);if([\"Customs\",\"Native Tongue\"].includes(name))b+=40;baseStandard[name]=b;});const baseProfessional={};skillsData.professional.forEach(_ref2=>{let{name,base}=_ref2;baseProfessional[name]=computeBase(base);});const baseCombatStyles={};availableCombatStyles.forEach(style=>{baseCombatStyles[style]=(attrs.STR||0)+(attrs.DEX||0);});// Phase control\nconst[phase,setPhase]=useState(1);// Phase1: cultural\nconst[cultStdAlloc,setCultStdAlloc]=useState({});const[cultProfSel,setCultProfSel]=useState([]);const[cultProfAlloc,setCultProfAlloc]=useState({});const[cultCombatSel,setCultCombatSel]=useState(null);const[cultCombatAlloc,setCultCombatAlloc]=useState(0);const CULT_POINTS=100;// Phase2: career\nconst[careerStdAlloc,setCareerStdAlloc]=useState({});const[careerProfSel,setCareerProfSel]=useState([]);const[careerProfAlloc,setCareerProfAlloc]=useState({});const CAREER_POINTS=100;// Phase3: bonus\nconst[bonusSel,setBonusSel]=useState([]);const[bonusAlloc,setBonusAlloc]=useState({});const BONUS_POINTS=150;const sum=obj=>Object.values(obj).reduce((a,b)=>a+(b||0),0);const clamp=v=>Math.max(5,Math.min(15,v));// Persist when complete\nuseEffect(()=>{if(phase>3){const finalSkills={...baseStandard,...baseProfessional};Object.entries(cultStdAlloc).forEach(_ref3=>{let[s,v]=_ref3;return finalSkills[s]+=v;});cultProfSel.forEach(s=>finalSkills[s]+=cultProfAlloc[s]||0);if(cultCombatSel)finalSkills[cultCombatSel]+=cultCombatAlloc;Object.entries(careerStdAlloc).forEach(_ref4=>{let[s,v]=_ref4;return finalSkills[s]+=v;});careerProfSel.forEach(s=>finalSkills[s]+=careerProfAlloc[s]||0);bonusSel.forEach(s=>finalSkills[s]+=bonusAlloc[s]||0);updateCharacter({baseStandard,baseProfessional,cultStdAlloc,cultProfSel,cultProfAlloc,cultCombatSel,cultCombatAlloc,careerStdAlloc,careerProfSel,careerProfAlloc,bonusSel,bonusAlloc,finalSkills});}},[phase]);// Points left\nconst usedCult=sum(cultStdAlloc)+sum(cultProfAlloc)+cultCombatAlloc;const leftCult=CULT_POINTS-usedCult;const usedCareer=sum(careerStdAlloc)+sum(careerProfAlloc);const leftCareer=CAREER_POINTS-usedCareer;const leftBonus=BONUS_POINTS-sum(bonusAlloc);// Color helper\nconst skillColor=total=>{const hue=total>=70?120:Math.round(total/70*120);return{color:`hsl(${hue},65%,40%)`};};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[phase===1&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step\\xA01: Cultural Skills\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Points Left: \",leftCult]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Standard (culture)\"}),cultureStandardSkills.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"w-32\",children:[s,\" (Base \",baseStandard[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultStdAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const prev=cultStdAlloc[s]||0;if(usedCult-prev+v<=CULT_POINTS)setCultStdAlloc({...cultStdAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Professional (max\\xA03)\"}),cultureProfSkills.map(s=>/*#__PURE__*/_jsxs(\"label\",{className:\"mr-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:cultProfSel.includes(s),onChange:()=>setCultProfSel(prev=>prev.includes(s)?prev.filter(x=>x!==s):prev.length<3?[...prev,s]:prev)}),s]},s)),cultProfSel.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"w-32\",children:[s,\" (Base \",baseProfessional[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultProfAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const prev=cultProfAlloc[s]||0;if(usedCult-prev+v<=CULT_POINTS)setCultProfAlloc({...cultProfAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Combat Style\"}),availableCombatStyles.map(cs=>/*#__PURE__*/_jsxs(\"label\",{className:\"mr-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"combat\",checked:cultCombatSel===cs,onChange:()=>setCultCombatSel(cs)}),cs]},cs)),cultCombatSel&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-32\",children:cultCombatSel}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultCombatAlloc,onChange:e=>{const v=clamp(+e.target.value);if(usedCult-cultCombatAlloc+v<=CULT_POINTS)setCultCombatAlloc(v);}})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-4\",children:\"Current Skills\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2\",children:[cultureStandardSkills.map(s=>{const total=baseStandard[s]+(cultStdAlloc[s]||0);return/*#__PURE__*/_jsxs(\"div\",{style:skillColor(total),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[s,\":\"]}),\" \",total,\"%\"]},s);}),cultureProfSkills.map(s=>cultProfSel.includes(s)&&(()=>{const total=baseProfessional[s]+(cultProfAlloc[s]||0);return/*#__PURE__*/_jsxs(\"div\",{style:skillColor(total),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[s,\":\"]}),\" \",total,\"%\"]},s);})()),cultCombatSel&&(()=>{const total=baseProfessional[cultCombatSel]+cultCombatAlloc;return/*#__PURE__*/_jsxs(\"div\",{style:skillColor(total),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[cultCombatSel,\":\"]}),\" \",total,\"%\"]},cultCombatSel);})()]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(2),className:\"mt-4 px-4 py-2 bg-gold\",children:\"Next\"})]}),phase===2&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step\\xA02: Career Skills\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Points Left: \",leftCareer]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Standard (career)\"}),careerStandardSkills.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"w-32\",children:[s,\" (Base \",baseStandard[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:careerStdAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const prev=careerStdAlloc[s]||0;if(leftCareer+prev-v>=0)setCareerStdAlloc({...careerStdAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Professional (max\\xA03)\"}),careerProfSkills.map(s=>/*#__PURE__*/_jsxs(\"label\",{className:\"mr-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:careerProfSel.includes(s),onChange:()=>setCareerProfSel(prev=>prev.includes(s)?prev.filter(x=>x!==s):prev.length<3?[...prev,s]:prev)}),s]},s)),careerProfSel.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"w-32\",children:[s,\" (Base \",baseProfessional[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:careerProfAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const prev=careerProfAlloc[s]||0;if(leftCareer+prev-v>=0)setCareerProfAlloc({...careerProfAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-4\",children:\"Current Skills\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-2\",children:[...cultureStandardSkills,...cultureProfSkills,cultCombatSel,...careerStandardSkills,...careerProfSkills].filter((v,i,a)=>v&&a.indexOf(v)===i).map(s=>{const total=(baseStandard[s]||baseProfessional[s]||0)+(cultStdAlloc[s]||0)+(cultProfAlloc[s]||0)+(cultCombatSel===s?cultCombatAlloc:0)+(careerStdAlloc[s]||0)+(careerProfAlloc[s]||0);return/*#__PURE__*/_jsxs(\"div\",{style:skillColor(total),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[s,\":\"]}),\" \",total,\"%\"]},s);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(1),className:\"px-4 py-2 bg-gray-300\",children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(3),className:\"px-4 py-2 bg-gold\",children:\"Next\"})]})]}),phase===3&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step\\xA03: Bonus Skills\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Points Left: \",leftBonus]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Distribute \",BONUS_POINTS,\" points (5\\u201315 each) and add one hobby skill.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Add Hobby:\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>{const s=e.target.value;if(s&&!bonusSel.includes(s))setBonusSel([...bonusSel,s]);},className:\"border p-1\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- select --\"}),[...cultureStandardSkills,...cultureProfSkills,cultCombatSel,...careerStandardSkills,...careerProfSkills].filter((v,i,a)=>v&&a.indexOf(v)===i).map(s=>/*#__PURE__*/_jsx(\"option\",{value:s,children:s},s))]})]}),bonusSel.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"w-32\",children:[s,\" (Base \",baseStandard[s]||baseProfessional[s]||0,\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:bonusAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const prev=bonusAlloc[s]||0;if(leftBonus+prev-v>=0)setBonusAlloc({...bonusAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-4\",children:\"Current Skills\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-2\",children:[...cultureStandardSkills,...cultureProfSkills,cultCombatSel,...careerStandardSkills,...careerProfSkills,...bonusSel].filter((v,i,a)=>v&&a.indexOf(v)===i).map(s=>{const total=(baseStandard[s]||baseProfessional[s]||0)+(cultStdAlloc[s]||0)+(cultProfAlloc[s]||0)+(cultCombatSel===s?cultCombatAlloc:0)+(careerStdAlloc[s]||0)+(careerProfAlloc[s]||0)+(bonusAlloc[s]||0);return/*#__PURE__*/_jsxs(\"div\",{style:skillColor(total),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[s,\":\"]}),\" \",total,\"%\"]},s);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(2),className:\"px-4 py-2 bg-gray-300\",children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(4),className:\"px-4 py-2 bg-gold\",children:\"Finish\"})]})]}),phase>3&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Done!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateCharacter({step:'done'}),className:\"px-4 py-2 bg-green-600 text-white\",children:\"Review\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCharacter","cultures","careers","skillsData","jsx","_jsx","jsxs","_jsxs","SkillsStep","character","updateCharacter","attrs","cultureDef","culture","careerDef","career","cultureStandardSkills","standardSkills","cultureProfSkills","professionalSkills","availableCombatStyles","combatStyles","careerStandardSkills","careerProfSkills","computeBase","expr","parts","split","filter","Boolean","val","parseInt","i","length","op","token","v","test","baseStandard","standard","forEach","_ref","name","base","b","includes","baseProfessional","professional","_ref2","baseCombatStyles","style","STR","DEX","phase","setPhase","cultStdAlloc","setCultStdAlloc","cultProfSel","setCultProfSel","cultProfAlloc","setCultProfAlloc","cultCombatSel","setCultCombatSel","cultCombatAlloc","setCultCombatAlloc","CULT_POINTS","careerStdAlloc","setCareerStdAlloc","careerProfSel","setCareerProfSel","careerProfAlloc","setCareerProfAlloc","CAREER_POINTS","bonusSel","setBonusSel","bonusAlloc","setBonusAlloc","BONUS_POINTS","sum","obj","Object","values","reduce","a","clamp","Math","max","min","finalSkills","entries","_ref3","s","_ref4","usedCult","leftCult","usedCareer","leftCareer","leftBonus","skillColor","total","hue","round","color","className","children","map","type","value","onChange","e","target","prev","checked","x","cs","onClick","indexOf","step"],"sources":["/workspaces/mythras-char-gen/src/steps/SkillsStep.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCharacter } from '../context/characterContext';\nimport cultures from '../data/cultures.json';\nimport careers from '../data/careers.json';\nimport skillsData from '../data/skills.json';\n\nexport function SkillsStep() {\nconst { character, updateCharacter } = useCharacter();\nconst attrs = character;\nconst cultureDef = cultures[character.culture] || {};\nconst careerDef = careers[character.career] || {};\n\n// safe arrays\nconst cultureStandardSkills = cultureDef.standardSkills || [];\nconst cultureProfSkills = cultureDef.professionalSkills || [];\nconst availableCombatStyles = cultureDef.combatStyles || [];\nconst careerStandardSkills = careerDef.standardSkills || [];\nconst careerProfSkills = careerDef.professionalSkills || [];\n\n// Compute base skill from attributes, handling numeric multipliers\nconst computeBase = expr => {\nconst parts = expr.split(/\\s*([+x])\\s*/).filter(Boolean);\nlet val = parseInt(attrs[parts[0]] || 0, 10);\nfor (let i = 1; i < parts.length; i += 2) {\nconst op = parts[i];\nconst token = parts[i+1];\nconst v = /^\\d+$/.test(token)\n? parseInt(token, 10)\n: parseInt(attrs[token] || 0, 10);\nval = op === 'x' ? val * v : val + v;\n}\nreturn val;\n};\n\n// base skill tables\nconst baseStandard = {};\nskillsData.standard.forEach(({ name, base }) => {\nlet b = computeBase(base);\nif ([\"Customs\", \"Native Tongue\"].includes(name)) b += 40;\nbaseStandard[name] = b;\n});\n\nconst baseProfessional = {};\nskillsData.professional.forEach(({ name, base }) => {\nbaseProfessional[name] = computeBase(base);\n});\n\nconst baseCombatStyles = {};\navailableCombatStyles.forEach(style => {\nbaseCombatStyles[style] = (attrs.STR || 0) + (attrs.DEX || 0);\n});\n\n  // Phase control\n  const [phase, setPhase] = useState(1);\n\n  // Phase1: cultural\n  const [cultStdAlloc, setCultStdAlloc] = useState({});\n  const [cultProfSel, setCultProfSel] = useState([]);\n  const [cultProfAlloc, setCultProfAlloc] = useState({});\n  const [cultCombatSel, setCultCombatSel] = useState(null);\n  const [cultCombatAlloc, setCultCombatAlloc] = useState(0);\n  const CULT_POINTS = 100;\n\n  // Phase2: career\n  const [careerStdAlloc, setCareerStdAlloc] = useState({});\n  const [careerProfSel, setCareerProfSel] = useState([]);\n  const [careerProfAlloc, setCareerProfAlloc] = useState({});\n  const CAREER_POINTS = 100;\n\n  // Phase3: bonus\n  const [bonusSel, setBonusSel] = useState([]);\n  const [bonusAlloc, setBonusAlloc] = useState({});\n  const BONUS_POINTS = 150;\n\n  const sum = obj => Object.values(obj).reduce((a,b) => a + (b||0), 0);\n  const clamp = v => Math.max(5, Math.min(15, v));\n\n  // Persist when complete\n  useEffect(() => {\n    if (phase > 3) {\n      const finalSkills = { ...baseStandard, ...baseProfessional };\n      Object.entries(cultStdAlloc).forEach(([s,v]) => finalSkills[s] += v);\n      cultProfSel.forEach(s => finalSkills[s] += cultProfAlloc[s] || 0);\n      if (cultCombatSel) finalSkills[cultCombatSel] += cultCombatAlloc;\n      Object.entries(careerStdAlloc).forEach(([s,v]) => finalSkills[s] += v);\n      careerProfSel.forEach(s => finalSkills[s] += careerProfAlloc[s] || 0);\n      bonusSel.forEach(s => finalSkills[s] += bonusAlloc[s] || 0);\n      updateCharacter({ baseStandard, baseProfessional, cultStdAlloc, cultProfSel, cultProfAlloc, cultCombatSel, cultCombatAlloc, careerStdAlloc, careerProfSel, careerProfAlloc, bonusSel, bonusAlloc, finalSkills });\n    }\n  }, [phase]);\n\n  // Points left\n  const usedCult = sum(cultStdAlloc) + sum(cultProfAlloc) + cultCombatAlloc;\n  const leftCult = CULT_POINTS - usedCult;\n  const usedCareer = sum(careerStdAlloc) + sum(careerProfAlloc);\n  const leftCareer = CAREER_POINTS - usedCareer;\n  const leftBonus = BONUS_POINTS - sum(bonusAlloc);\n\n  // Color helper\n  const skillColor = total => {\n    const hue = total >= 70 ? 120 : Math.round((total / 70) * 120);\n    return { color: `hsl(${hue},65%,40%)` };\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {phase === 1 && (\n        <div>\n          <h3>Step 1: Cultural Skills</h3>\n          <p>Points Left: {leftCult}</p>\n          <h4>Standard (culture)</h4>\n          {cultureStandardSkills.map(s => (\n            <div key={s} className=\"flex items-center\">\n              <span className=\"w-32\">{s} (Base {baseStandard[s]}%)</span>\n              <input type=\"number\" min={5} max={15} value={cultStdAlloc[s]||0} onChange={e => {\n                const v = clamp(+e.target.value);\n                const prev = cultStdAlloc[s]||0;\n                if (usedCult - prev + v <= CULT_POINTS) setCultStdAlloc({ ...cultStdAlloc, [s]: v });\n              }}/>\n            </div>\n          ))}\n          <h4>Professional (max 3)</h4>\n          {cultureProfSkills.map(s => (\n            <label key={s} className=\"mr-4\">\n              <input type=\"checkbox\" checked={cultProfSel.includes(s)} onChange={() => setCultProfSel(prev => prev.includes(s) ? prev.filter(x=>x!==s) : prev.length<3 ? [...prev,s] : prev)}/>{s}\n            </label>\n          ))}\n          {cultProfSel.map(s => (\n            <div key={s} className=\"flex items-center\">\n              <span className=\"w-32\">{s} (Base {baseProfessional[s]}%)</span>\n              <input type=\"number\" min={5} max={15} value={cultProfAlloc[s]||0} onChange={e => {\n                const v = clamp(+e.target.value);\n                const prev = cultProfAlloc[s]||0;\n                if (usedCult - prev + v <= CULT_POINTS) setCultProfAlloc({ ...cultProfAlloc, [s]: v });\n              }}/>\n            </div>\n          ))}\n          <h4>Combat Style</h4>\n          {availableCombatStyles.map(cs => (\n            <label key={cs} className=\"mr-4\">\n              <input type=\"radio\" name=\"combat\" checked={cultCombatSel===cs} onChange={()=>setCultCombatSel(cs)}/>{cs}\n            </label>\n          ))}\n          {cultCombatSel && (\n            <div className=\"flex items-center\">\n              <span className=\"w-32\">{cultCombatSel}</span>\n              <input type=\"number\" min={5} max={15} value={cultCombatAlloc} onChange={e=>{\n                const v=clamp(+e.target.value);\n                if(usedCult - cultCombatAlloc + v <= CULT_POINTS) setCultCombatAlloc(v);\n              }}/>\n            </div>\n          )}\n          {/* Summary */}\n          <h4 className=\"mt-4\">Current Skills</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {cultureStandardSkills.map(s => {\n              const total = baseStandard[s] + (cultStdAlloc[s]||0);\n              return <div key={s} style={skillColor(total)}><strong>{s}:</strong> {total}%</div>;\n            })}\n            {cultureProfSkills.map(s => cultProfSel.includes(s) && (() => {\n              const total = baseProfessional[s] + (cultProfAlloc[s]||0);\n              return <div key={s} style={skillColor(total)}><strong>{s}:</strong> {total}%</div>;\n            })())}\n            {cultCombatSel && (() => {\n              const total = baseProfessional[cultCombatSel] + cultCombatAlloc;\n              return <div key={cultCombatSel} style={skillColor(total)}><strong>{cultCombatSel}:</strong> {total}%</div>;\n            })()}\n          </div>\n          <button onClick={()=>setPhase(2)} className=\"mt-4 px-4 py-2 bg-gold\">Next</button>\n        </div>\n      )}\n\n      {phase===2 && (\n        <div>\n          <h3>Step 2: Career Skills</h3>\n          <p>Points Left: {leftCareer}</p>\n          <h4>Standard (career)</h4>\n          {careerStandardSkills.map(s => (\n            <div key={s} className=\"flex items-center\">\n              <span className=\"w-32\">{s} (Base {baseStandard[s]}%)</span>\n              <input type=\"number\" min={5} max={15} value={careerStdAlloc[s]||0} onChange={e=>{\n                const v=clamp(+e.target.value);\n                const prev=careerStdAlloc[s]||0;\n                if(leftCareer + prev - v >=0) setCareerStdAlloc({ ...careerStdAlloc,[s]:v });\n              }}/>\n            </div>\n          ))}\n          <h4>Professional (max 3)</h4>\n          {careerProfSkills.map(s=>(\n            <label key={s} className=\"mr-4\">\n              <input type=\"checkbox\" checked={careerProfSel.includes(s)} onChange={()=>setCareerProfSel(prev=> prev.includes(s)? prev.filter(x=>x!==s): prev.length<3? [...prev,s]: prev)}/>{s}\n            </label>\n          ))}\n          {careerProfSel.map(s=>(\n            <div key={s} className=\"flex items-center\">\n              <span className=\"w-32\">{s} (Base {baseProfessional[s]}%)</span>\n              <input type=\"number\" min={5} max={15} value={careerProfAlloc[s]||0} onChange={e=>{\n                const v=clamp(+e.target.value);\n                const prev=careerProfAlloc[s]||0;\n                if(leftCareer + prev - v >=0) setCareerProfAlloc({ ...careerProfAlloc,[s]:v });\n              }}/>\n            </div>\n          ))}\n          {/* Summary */}\n          <h4 className=\"mt-4\">Current Skills</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {[...cultureStandardSkills, ...cultureProfSkills, cultCombatSel, ...careerStandardSkills, ...careerProfSkills]\n              .filter((v,i,a)=>v&&a.indexOf(v)===i)\n              .map(s => {\n                const total = (baseStandard[s]||baseProfessional[s]||0) + (cultStdAlloc[s]||0) + (cultProfAlloc[s]||0) + (cultCombatSel===s?cultCombatAlloc:0) + (careerStdAlloc[s]||0) + (careerProfAlloc[s]||0);\n                return <div key={s} style={skillColor(total)}><strong>{s}:</strong> {total}%</div>;\n              })}\n          </div>\n          <div className=\"mt-4 flex space-x-2\">\n            <button onClick={()=>setPhase(1)} className=\"px-4 py-2 bg-gray-300\">Back</button>\n            <button onClick={()=>setPhase(3)} className=\"px-4 py-2 bg-gold\">Next</button>\n          </div>\n        </div>\n      )}\n\n      {phase===3 && (\n        <div>\n          <h3>Step 3: Bonus Skills</h3>\n          <p>Points Left: {leftBonus}</p>\n          <p>Distribute {BONUS_POINTS} points (5–15 each) and add one hobby skill.</p>\n          <div className=\"mt-4\">\n            <label>Add Hobby:</label>\n            <select onChange={e=>{const s=e.target.value; if(s&&!bonusSel.includes(s)) setBonusSel([...bonusSel,s]);}} className=\"border p-1\">\n              <option value=\"\">-- select --</option>\n              {[...cultureStandardSkills, ...cultureProfSkills, cultCombatSel, ...careerStandardSkills, ...careerProfSkills]\n                .filter((v,i,a)=>v&&a.indexOf(v)===i)\n                .map(s=><option key={s} value={s}>{s}</option>)}\n            </select>\n          </div>\n          {bonusSel.map(s=>(\n            <div key={s} className=\"flex items-center mt-2\">\n              <span className=\"w-32\">{s} (Base {(baseStandard[s]||baseProfessional[s]||0)}%)</span>\n              <input type=\"number\" min={5} max={15} value={bonusAlloc[s]||0} onChange={e=>{\n                const v=clamp(+e.target.value);\n                const prev=bonusAlloc[s]||0;\n                if(leftBonus+prev-v>=0) setBonusAlloc({...bonusAlloc,[s]:v});\n              }}/>\n            </div>\n          ))}\n          {/* Summary */}\n          <h4 className=\"mt-4\">Current Skills</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {[...cultureStandardSkills, ...cultureProfSkills, cultCombatSel, ...careerStandardSkills, ...careerProfSkills, ...bonusSel]\n              .filter((v,i,a)=>v&&a.indexOf(v)===i)\n              .map(s=>{\n                const total=(baseStandard[s]||baseProfessional[s]||0)+(cultStdAlloc[s]||0)+(cultProfAlloc[s]||0)+(cultCombatSel===s?cultCombatAlloc:0)+(careerStdAlloc[s]||0)+(careerProfAlloc[s]||0)+(bonusAlloc[s]||0);\n                return <div key={s} style={skillColor(total)}><strong>{s}:</strong> {total}%</div>;\n              })}\n          </div>\n          <div className=\"mt-4 flex space-x-2\">\n            <button onClick={()=>setPhase(2)} className=\"px-4 py-2 bg-gray-300\">Back</button>\n            <button onClick={()=>setPhase(4)} className=\"px-4 py-2 bg-gold\">Finish</button>\n          </div>\n        </div>\n      )}\n\n      {phase>3 && (\n        <div>\n          <h3>Done!</h3>\n          <button onClick={()=>updateCharacter({ step: 'done' })} className=\"px-4 py-2 bg-green-600 text-white\">Review</button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}