{"ast":null,"code":"// src/context/characterContext.js\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CharacterContext=/*#__PURE__*/createContext();export function CharacterProvider(_ref){let{children}=_ref;const[character,setCharacter]=useState({// Concept step\nname:'',playerName:'',gender:'',age:'',culture:'',career:'',socialClass:'',startingMoney:0,// Attributes (you may already be initializing these elsewhere)\nSTR:0,CON:0,DEX:0,INT:0,POW:0,CHA:0,// Skills (filled in later steps)\nskills:{}// …any other fields your app uses (equipment, magic, etc.)…\n});function updateCharacter(patch){setCharacter(current=>({...current,...patch}));}return/*#__PURE__*/_jsx(CharacterContext.Provider,{value:{character,updateCharacter},children:children});}export function useCharacter(){const ctx=useContext(CharacterContext);if(!ctx){throw new Error('useCharacter must be used within a CharacterProvider');}return ctx;}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","CharacterContext","CharacterProvider","_ref","children","character","setCharacter","name","playerName","gender","age","culture","career","socialClass","startingMoney","STR","CON","DEX","INT","POW","CHA","skills","updateCharacter","patch","current","Provider","value","useCharacter","ctx","Error"],"sources":["/workspaces/mythras-char-gen/src/context/characterContext.jsx"],"sourcesContent":["// src/context/characterContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\nconst CharacterContext = createContext();\n\nexport function CharacterProvider({ children }) {\n  const [character, setCharacter] = useState({\n    // Concept step\n    name: '',\n    playerName: '',\n    gender: '',\n    age: '',\n    culture: '',\n    career: '',\n    socialClass: '',\n    startingMoney: 0,\n\n    // Attributes (you may already be initializing these elsewhere)\n    STR: 0,\n    CON: 0,\n    DEX: 0,\n    INT: 0,\n    POW: 0,\n    CHA: 0,\n\n    // Skills (filled in later steps)\n    skills: {},\n\n    // …any other fields your app uses (equipment, magic, etc.)…\n  });\n\n  function updateCharacter(patch) {\n    setCharacter(current => ({\n      ...current,\n      ...patch\n    }));\n  }\n\n  return (\n    <CharacterContext.Provider value={{ character, updateCharacter }}>\n      {children}\n    </CharacterContext.Provider>\n  );\n}\n\nexport function useCharacter() {\n  const ctx = useContext(CharacterContext);\n  if (!ctx) {\n    throw new Error('useCharacter must be used within a CharacterProvider');\n  }\n  return ctx;\n}\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,gBAAgB,cAAGL,aAAa,CAAC,CAAC,CAExC,MAAO,SAAS,CAAAM,iBAAiBA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,CACzC;AACAS,IAAI,CAAE,EAAE,CACRC,UAAU,CAAE,EAAE,CACdC,MAAM,CAAE,EAAE,CACVC,GAAG,CAAE,EAAE,CACPC,OAAO,CAAE,EAAE,CACXC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,aAAa,CAAE,CAAC,CAEhB;AACAC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CAAC,CAEN;AACAC,MAAM,CAAE,CAAC,CAET;AACF,CAAC,CAAC,CAEF,QAAS,CAAAC,eAAeA,CAACC,KAAK,CAAE,CAC9BjB,YAAY,CAACkB,OAAO,GAAK,CACvB,GAAGA,OAAO,CACV,GAAGD,KACL,CAAC,CAAC,CAAC,CACL,CAEA,mBACEvB,IAAA,CAACC,gBAAgB,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAAErB,SAAS,CAAEiB,eAAgB,CAAE,CAAAlB,QAAA,CAC9DA,QAAQ,CACgB,CAAC,CAEhC,CAEA,MAAO,SAAS,CAAAuB,YAAYA,CAAA,CAAG,CAC7B,KAAM,CAAAC,GAAG,CAAG/B,UAAU,CAACI,gBAAgB,CAAC,CACxC,GAAI,CAAC2B,GAAG,CAAE,CACR,KAAM,IAAI,CAAAC,KAAK,CAAC,sDAAsD,CAAC,CACzE,CACA,MAAO,CAAAD,GAAG,CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}