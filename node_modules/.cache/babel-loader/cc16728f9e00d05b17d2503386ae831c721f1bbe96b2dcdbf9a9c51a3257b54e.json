{"ast":null,"code":"// src/steps/SkillsStep.jsx\nimport React,{useState,useEffect}from'react';import{useCharacter}from'../context/characterContext';import cultures from'../data/cultures.json';import careers from'../data/careers.json';import skillsData from'../data/skills.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function SkillsStep(){const{character,updateCharacter}=useCharacter();const attrs=character;const cultureDef=cultures[character.culture]||{};const careerDef=careers[character.career]||{};// Compute base from attributes\nconst computeBase=expr=>{const parts=expr.split(/\\s*([+x])\\s*/).filter(Boolean);let val=parseInt(attrs[parts[0]]||0,10);for(let i=1;i<parts.length;i+=2){const op=parts[i],attr=parts[i+1];const v=parseInt(attrs[attr]||0,10);val=op==='x'?val*v:val+v;}return val;};// Base values\nconst baseStandard={};skillsData.standard.forEach(_ref=>{let{name,base}=_ref;let b=computeBase(base);if(name==='Customs'||name==='Native Tongue')b+=40;baseStandard[name]=b;});const baseProfessional={};skillsData.professional.forEach(_ref2=>{let{name,base}=_ref2;baseProfessional[name]=computeBase(base);});// Phase control 1,2,3\nconst[phase,setPhase]=useState(1);// Phase1: culture\nconst[cultStdAlloc,setCultStdAlloc]=useState({});const[cultProfSel,setCultProfSel]=useState([]);const[cultProfAlloc,setCultProfAlloc]=useState({});const[cultCombatSel,setCultCombatSel]=useState(null);const[cultCombatAlloc,setCultCombatAlloc]=useState(0);const CULT_POINTS=100;// Phase2: career\nconst[careerStdAlloc,setCareerStdAlloc]=useState({});const[careerProfSel,setCareerProfSel]=useState([]);const[careerProfAlloc,setCareerProfAlloc]=useState({});const CAREER_POINTS=100;// Phase3: bonus\nconst[bonusSel,setBonusSel]=useState([]);const[bonusAlloc,setBonusAlloc]=useState({});const BONUS_POINTS=150;const sum=o=>Object.values(o).reduce((a,b)=>a+(b||0),0);const clamp=v=>Math.max(5,Math.min(15,v));// Persist on finish\nuseEffect(()=>{if(phase>3){// build finalSkills object\nconst finalSkills={...baseStandard,...baseProfessional};// add culture std\nObject.entries(cultStdAlloc).forEach(_ref3=>{let[s,v]=_ref3;return finalSkills[s]+=v;});// culture prof\ncultProfSel.forEach(s=>finalSkills[s]+=cultProfAlloc[s]||0);// combat style\nif(cultCombatSel)finalSkills[cultCombatSel]+=cultCombatAlloc;// career std (no selection limit)\nObject.entries(careerStdAlloc).forEach(_ref4=>{let[s,v]=_ref4;return finalSkills[s]+=v;});// career prof\ncareerProfSel.forEach(s=>finalSkills[s]+=careerProfAlloc[s]||0);// bonus\nbonusSel.forEach(s=>finalSkills[s]+=bonusAlloc[s]||0);updateCharacter({baseStandard,baseProfessional,cultStdAlloc,cultProfSel,cultProfAlloc,cultCombatSel,cultCombatAlloc,careerStdAlloc,careerProfSel,careerProfAlloc,bonusSel,bonusAlloc,finalSkills});}},[phase]);// Render\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[phase===1&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step 1: Cultural\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Distribute \",CULT_POINTS,\" points (5\\u201315 each)\"]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Standard Skills\"}),cultureDef.standardSkills.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[s,\" (\",baseStandard[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultStdAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const used=sum(cultStdAlloc)-(cultStdAlloc[s]||0)+v;if(used<=CULT_POINTS)setCultStdAlloc({...cultStdAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Professional Skills (max 3)\"}),cultureDef.professionalSkills.map(s=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:cultProfSel.includes(s),onChange:()=>{setCultProfSel(prev=>prev.includes(s)?prev.filter(x=>x!==s):prev.length<3?[...prev,s]:prev);}}),s]},s)),cultProfSel.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[s,\" (\",baseProfessional[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultProfAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const used=sum(cultStdAlloc)+sum(cultProfAlloc)-(cultProfAlloc[s]||0)+v;if(used<=CULT_POINTS)setCultProfAlloc({...cultProfAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Combat Style (select 1)\"}),skillsData.combatStyles.map(cs=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"combat\",checked:cultCombatSel===cs,onChange:()=>setCultCombatSel(cs)}),cs]},cs)),cultCombatSel&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{children:cultCombatSel}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:cultCombatAlloc,onChange:e=>{const v=clamp(+e.target.value);const used=sum(cultStdAlloc)+sum(cultProfAlloc)+v;if(used<=CULT_POINTS)setCultCombatAlloc(v);}})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(2),children:\"Next\"})]}),phase===2&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step 2: Career\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Distribute \",CAREER_POINTS,\" points (5\\u201315 each)\"]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Standard Skills\"}),careerDef.standardSkills.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[s,\" (\",baseStandard[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:careerStdAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const used=sum(careerStdAlloc)-(careerStdAlloc[s]||0)+v;if(used<=CAREER_POINTS)setCareerStdAlloc({...careerStdAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsx(\"h4\",{children:\"Professional Skills (max 3)\"}),careerDef.professionalSkills.map(s=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:careerProfSel.includes(s),onChange:()=>{setCareerProfSel(prev=>prev.includes(s)?prev.filter(x=>x!==s):prev.length<3?[...prev,s]:prev);}}),s]},s)),careerProfSel.map(s=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[s,\" (\",baseProfessional[s],\"%)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:5,max:15,value:careerProfAlloc[s]||0,onChange:e=>{const v=clamp(+e.target.value);const used=sum(careerStdAlloc)+sum(careerProfAlloc)-(careerProfAlloc[s]||0)+v;if(used<=CAREER_POINTS)setCareerProfAlloc({...careerProfAlloc,[s]:v});}})]},s)),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(1),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(3),children:\"Next\"})]})]}),phase===3&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Step 3: Bonus\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Distribute \",BONUS_POINTS,\" points (5\\u201315 each) and add one hobby\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(2),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setPhase(4),children:\"Finish\"})]})]}),phase>3&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Done!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateCharacter({step:'done'}),children:\"Review\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCharacter","cultures","careers","skillsData","jsx","_jsx","jsxs","_jsxs","SkillsStep","character","updateCharacter","attrs","cultureDef","culture","careerDef","career","computeBase","expr","parts","split","filter","Boolean","val","parseInt","i","length","op","attr","v","baseStandard","standard","forEach","_ref","name","base","b","baseProfessional","professional","_ref2","phase","setPhase","cultStdAlloc","setCultStdAlloc","cultProfSel","setCultProfSel","cultProfAlloc","setCultProfAlloc","cultCombatSel","setCultCombatSel","cultCombatAlloc","setCultCombatAlloc","CULT_POINTS","careerStdAlloc","setCareerStdAlloc","careerProfSel","setCareerProfSel","careerProfAlloc","setCareerProfAlloc","CAREER_POINTS","bonusSel","setBonusSel","bonusAlloc","setBonusAlloc","BONUS_POINTS","sum","o","Object","values","reduce","a","clamp","Math","max","min","finalSkills","entries","_ref3","s","_ref4","className","children","standardSkills","map","type","value","onChange","e","target","used","professionalSkills","checked","includes","prev","x","combatStyles","cs","onClick","step"],"sources":["/workspaces/mythras-char-gen/src/steps/SkillsStep.jsx"],"sourcesContent":["// src/steps/SkillsStep.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useCharacter } from '../context/characterContext';\nimport cultures from '../data/cultures.json';\nimport careers from '../data/careers.json';\nimport skillsData from '../data/skills.json';\n\nexport function SkillsStep() {\n  const { character, updateCharacter } = useCharacter();\n  const attrs = character;\n  const cultureDef = cultures[character.culture] || {};\n  const careerDef = careers[character.career] || {};\n\n  // Compute base from attributes\n  const computeBase = (expr) => {\n    const parts = expr.split(/\\s*([+x])\\s*/).filter(Boolean);\n    let val = parseInt(attrs[parts[0]]||0, 10);\n    for (let i=1;i<parts.length;i+=2) {\n      const op=parts[i], attr=parts[i+1];\n      const v=parseInt(attrs[attr]||0,10);\n      val = op==='x'? val*v : val+v;\n    }\n    return val;\n  };\n\n  // Base values\n  const baseStandard = {};\n  skillsData.standard.forEach(({name,base}) => {\n    let b=computeBase(base);\n    if(name==='Customs' || name==='Native Tongue') b+=40;\n    baseStandard[name]=b;\n  });\n  const baseProfessional = {};\n  skillsData.professional.forEach(({name,base})=>{\n    baseProfessional[name]=computeBase(base);\n  });\n\n  // Phase control 1,2,3\n  const [phase,setPhase]=useState(1);\n\n  // Phase1: culture\n  const [cultStdAlloc,setCultStdAlloc]=useState({});\n  const [cultProfSel,setCultProfSel]=useState([]);\n  const [cultProfAlloc,setCultProfAlloc]=useState({});\n  const [cultCombatSel,setCultCombatSel]=useState(null);\n  const [cultCombatAlloc,setCultCombatAlloc]=useState(0);\n  const CULT_POINTS=100;\n\n  // Phase2: career\n  const [careerStdAlloc,setCareerStdAlloc]=useState({});\n  const [careerProfSel,setCareerProfSel]=useState([]);\n  const [careerProfAlloc,setCareerProfAlloc]=useState({});\n  const CAREER_POINTS=100;\n\n  // Phase3: bonus\n  const [bonusSel,setBonusSel]=useState([]);\n  const [bonusAlloc,setBonusAlloc]=useState({});\n  const BONUS_POINTS=150;\n\n  const sum=(o)=>Object.values(o).reduce((a,b)=>(a+(b||0)),0);\n  const clamp=(v)=>Math.max(5,Math.min(15,v));\n\n  // Persist on finish\n  useEffect(()=>{\n    if(phase>3) {\n      // build finalSkills object\n      const finalSkills={...baseStandard,...baseProfessional};\n      // add culture std\n      Object.entries(cultStdAlloc).forEach(([s,v])=>finalSkills[s]+=v);\n      // culture prof\n      cultProfSel.forEach(s=>finalSkills[s]+=cultProfAlloc[s]||0);\n      // combat style\n      if(cultCombatSel) finalSkills[cultCombatSel]+=cultCombatAlloc;\n      // career std (no selection limit)\n      Object.entries(careerStdAlloc).forEach(([s,v])=>finalSkills[s]+=v);\n      // career prof\n      careerProfSel.forEach(s=>finalSkills[s]+=careerProfAlloc[s]||0);\n      // bonus\n      bonusSel.forEach(s=>finalSkills[s]+=bonusAlloc[s]||0);\n\n      updateCharacter({\n        baseStandard,baseProfessional,\n        cultStdAlloc,cultProfSel,cultProfAlloc,cultCombatSel,cultCombatAlloc,\n        careerStdAlloc,careerProfSel,careerProfAlloc,\n        bonusSel,bonusAlloc,\n        finalSkills\n      });\n    }\n  },[phase]);\n\n  // Render\n  return (\n    <div className=\"space-y-6\">\n      {phase===1 && (\n        <div>\n          <h3>Step 1: Cultural</h3>\n          <p>Distribute {CULT_POINTS} points (5–15 each)</p>\n          <h4>Standard Skills</h4>\n          {cultureDef.standardSkills.map(s=>(\n            <div key={s} className=\"flex items-center\">\n              <span>{s} ({baseStandard[s]}%)</span>\n              <input type=\"number\" min={5} max={15}\n                value={cultStdAlloc[s]||0}\n                onChange={e=>{\n                  const v=clamp(+e.target.value);\n                  const used=sum(cultStdAlloc)- (cultStdAlloc[s]||0) + v;\n                  if(used<=CULT_POINTS) setCultStdAlloc({...cultStdAlloc,[s]:v});\n                }}/>\n            </div>\n          ))}\n          <h4>Professional Skills (max 3)</h4>\n          {cultureDef.professionalSkills.map(s=>(\n            <label key={s}>\n              <input type=\"checkbox\" checked={cultProfSel.includes(s)}\n                onChange={()=>{\n                  setCultProfSel(prev=> prev.includes(s)? prev.filter(x=>x!==s): prev.length<3? [...prev,s]: prev);\n                }}/>{s}\n            </label>\n          ))}\n          {cultProfSel.map(s=>(\n            <div key={s} className=\"flex items-center\">\n              <span>{s} ({baseProfessional[s]}%)</span>\n              <input type=\"number\" min={5} max={15}\n                value={cultProfAlloc[s]||0}\n                onChange={e=>{\n                  const v=clamp(+e.target.value);\n                  const used=sum(cultStdAlloc)+sum(cultProfAlloc)- (cultProfAlloc[s]||0) + v;\n                  if(used<=CULT_POINTS) setCultProfAlloc({...cultProfAlloc,[s]:v});\n                }}/>\n            </div>\n          ))}\n          <h4>Combat Style (select 1)</h4>\n          {skillsData.combatStyles.map(cs=>(\n            <label key={cs}>\n              <input type=\"radio\" name=\"combat\" checked={cultCombatSel===cs}\n                onChange={()=>setCultCombatSel(cs)}/>{cs}\n            </label>\n          ))}\n          {cultCombatSel && (\n            <div className=\"flex items-center\">\n              <span>{cultCombatSel}</span>\n              <input type=\"number\" min={5} max={15}\n                value={cultCombatAlloc}\n                onChange={e=>{\n                  const v=clamp(+e.target.value);\n                  const used=sum(cultStdAlloc)+sum(cultProfAlloc)+ v;\n                  if(used<=CULT_POINTS) setCultCombatAlloc(v);\n                }}/>\n            </div>\n          )}\n          <button onClick={()=>setPhase(2)}>Next</button>\n        </div>\n      )}\n\n      {phase===2 && (\n        <div>\n          <h3>Step 2: Career</h3>\n          <p>Distribute {CAREER_POINTS} points (5–15 each)</p>\n          <h4>Standard Skills</h4>\n          {careerDef.standardSkills.map(s=>(\n            <div key={s} className=\"flex items-center\">\n              <span>{s} ({baseStandard[s]}%)</span>\n              <input type=\"number\" min={5} max={15}\n                value={careerStdAlloc[s]||0}\n                onChange={e=>{\n                  const v=clamp(+e.target.value);\n                  const used=sum(careerStdAlloc)- (careerStdAlloc[s]||0) + v;\n                  if(used<=CAREER_POINTS) setCareerStdAlloc({...careerStdAlloc,[s]:v});\n                }}/>\n            </div>\n          ))}\n          <h4>Professional Skills (max 3)</h4>\n          {careerDef.professionalSkills.map(s=>(\n            <label key={s}>\n              <input type=\"checkbox\" checked={careerProfSel.includes(s)}\n                onChange={()=>{\n                  setCareerProfSel(prev=> prev.includes(s)? prev.filter(x=>x!==s): prev.length<3? [...prev,s]: prev);\n                }}/>{s}\n            </label>\n          ))}\n          {careerProfSel.map(s=>(\n            <div key={s} className=\"flex items-center\">\n              <span>{s} ({baseProfessional[s]}%)</span>\n              <input type=\"number\" min={5} max={15}\n                value={careerProfAlloc[s]||0}\n                onChange={e=>{\n                  const v=clamp(+e.target.value);\n                  const used=sum(careerStdAlloc)+sum(careerProfAlloc)- (careerProfAlloc[s]||0) + v;\n                  if(used<=CAREER_POINTS) setCareerProfAlloc({...careerProfAlloc,[s]:v});\n                }}/>\n            </div>\n          ))}\n          <div>\n            <button onClick={()=>setPhase(1)}>Back</button>\n            <button onClick={()=>setPhase(3)}>Next</button>\n          </div>\n        </div>\n      )}\n\n      {phase===3 && (\n        <div>\n          <h3>Step 3: Bonus</h3>\n          <p>Distribute {BONUS_POINTS} points (5–15 each) and add one hobby</p>\n          <div>\n            <button onClick={()=>setPhase(2)}>Back</button>\n            <button onClick={()=>setPhase(4)}>Finish</button>\n          </div>\n        </div>\n      )}\n\n      {phase>3 && (\n        <div>\n          <h3>Done!</h3>\n          <button onClick={()=>updateCharacter({step:'done'})}>Review</button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}